/**
 * vertigo - simple java starter
 *
 * Copyright (C) 2013-2019, KleeGroup, direction.technique@kleegroup.com (http://www.kleegroup.com)
 * KleeGroup, Centre d'affaire la Boursidiere - BP 159 - 92357 Le Plessis Robinson Cedex - France
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.vertigo.workflow.domain.instance;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.model.VAccessor;
import io.vertigo.dynamo.domain.model.EnumVAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class WfWorkflow implements Entity {
	private static final long serialVersionUID = 1L;

	private Long wfwId;
	private java.util.Date creationDate;
	private Long itemId;
	private String username;
	private Boolean userLogic;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_WFWD_WFW",
			fkFieldName = "WFWD_ID",
			primaryDtDefinitionName = "DT_WF_WORKFLOW_DEFINITION",
			primaryIsNavigable = true,
			primaryRole = "WfWorkflowDefinition",
			primaryLabel = "WfWorkflowDefinition",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_WF_WORKFLOW",
			foreignIsNavigable = false,
			foreignRole = "WfWorkflow",
			foreignLabel = "WfWorkflow",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.workflow.domain.model.WfWorkflowDefinition> wfwdIdAccessor = new VAccessor<>(io.vertigo.workflow.domain.model.WfWorkflowDefinition.class, "WfWorkflowDefinition");

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_WFW_WFS",
			fkFieldName = "WFS_CODE",
			primaryDtDefinitionName = "DT_WF_STATUS",
			primaryIsNavigable = true,
			primaryRole = "WfStatus",
			primaryLabel = "WfStatus",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DT_WF_WORKFLOW",
			foreignIsNavigable = false,
			foreignRole = "WfWorkflow",
			foreignLabel = "WfWorkflow",
			foreignMultiplicity = "1..*")
	private final EnumVAccessor<io.vertigo.workflow.domain.instance.WfStatus, io.vertigo.workflow.domain.instance.WfStatusEnum> wfsCodeAccessor = new EnumVAccessor<>(io.vertigo.workflow.domain.instance.WfStatus.class, "WfStatus", io.vertigo.workflow.domain.instance.WfStatusEnum.class);

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_WFW_WFA_2",
			fkFieldName = "WFA_ID_2",
			primaryDtDefinitionName = "DT_WF_ACTIVITY",
			primaryIsNavigable = true,
			primaryRole = "Current",
			primaryLabel = "current",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DT_WF_WORKFLOW",
			foreignIsNavigable = false,
			foreignRole = "WfWorkflow",
			foreignLabel = "WfWorkflow",
			foreignMultiplicity = "0..*")
	private final VAccessor<io.vertigo.workflow.domain.instance.WfActivity> wfaId2Accessor = new VAccessor<>(io.vertigo.workflow.domain.instance.WfActivity.class, "Current");

	/** {@inheritDoc} */
	@Override
	public URI<WfWorkflow> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Id Workflow'.
	 * @return Long wfwId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_WF_ID", type = "ID", required = true, label = "Id Workflow")
	public Long getWfwId() {
		return wfwId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Id Workflow'.
	 * @param wfwId Long <b>Obligatoire</b>
	 */
	public void setWfwId(final Long wfwId) {
		this.wfwId = wfwId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'creation date'.
	 * @return java.util.Date creationDate
	 */
	@Field(domain = "DO_WF_DATE", label = "creation date")
	public java.util.Date getCreationDate() {
		return creationDate;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'creation date'.
	 * @param creationDate java.util.Date
	 */
	public void setCreationDate(final java.util.Date creationDate) {
		this.creationDate = creationDate;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'itemId'.
	 * @return Long itemId
	 */
	@Field(domain = "DO_WF_WEAK_ID", label = "itemId")
	public Long getItemId() {
		return itemId;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'itemId'.
	 * @param itemId Long
	 */
	public void setItemId(final Long itemId) {
		this.itemId = itemId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'username'.
	 * @return String username
	 */
	@Field(domain = "DO_WF_USER", label = "username")
	public String getUsername() {
		return username;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'username'.
	 * @param username String
	 */
	public void setUsername(final String username) {
		this.username = username;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'user_logic'.
	 * @return Boolean userLogic <b>Obligatoire</b>
	 */
	@Field(domain = "DO_WF_FLAG", required = true, label = "user_logic")
	public Boolean getUserLogic() {
		return userLogic;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'user_logic'.
	 * @param userLogic Boolean <b>Obligatoire</b>
	 */
	public void setUserLogic(final Boolean userLogic) {
		this.userLogic = userLogic;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'WfWorkflowDefinition'.
	 * @return Long wfwdId <b>Obligatoire</b>
	 */
	@Field(domain = "DO_WF_ID", type = "FOREIGN_KEY", required = true, label = "WfWorkflowDefinition")
	public Long getWfwdId() {
		return (Long)  wfwdIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'WfWorkflowDefinition'.
	 * @param wfwdId Long <b>Obligatoire</b>
	 */
	public void setWfwdId(final Long wfwdId) {
		wfwdIdAccessor.setId(wfwdId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'WfStatus'.
	 * @return String wfsCode <b>Obligatoire</b>
	 */
	@Field(domain = "DO_WF_CODE", type = "FOREIGN_KEY", required = true, label = "WfStatus")
	public String getWfsCode() {
		return (String)  wfsCodeAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'WfStatus'.
	 * @param wfsCode String <b>Obligatoire</b>
	 */
	public void setWfsCode(final String wfsCode) {
		wfsCodeAccessor.setId(wfsCode);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'current'.
	 * @return Long wfaId2
	 */
	@Field(domain = "DO_WF_ID", type = "FOREIGN_KEY", label = "current")
	public Long getWfaId2() {
		return (Long)  wfaId2Accessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'current'.
	 * @param wfaId2 Long
	 */
	public void setWfaId2(final Long wfaId2) {
		wfaId2Accessor.setId(wfaId2);
	}

 	/**
	 * Association : WfWorkflowDefinition.
	 * @return l'accesseur vers la propriété 'WfWorkflowDefinition'
	 */
	public VAccessor<io.vertigo.workflow.domain.model.WfWorkflowDefinition> wfWorkflowDefinition() {
		return wfwdIdAccessor;
	}
	
	@Deprecated
	public io.vertigo.workflow.domain.model.WfWorkflowDefinition getWfWorkflowDefinition() {
		// we keep the lazyness
		if (!wfwdIdAccessor.isLoaded()) {
			wfwdIdAccessor.load();
		}
		return wfwdIdAccessor.get();
	}

	/**
	 * Retourne l'URI: WfWorkflowDefinition.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.workflow.domain.model.WfWorkflowDefinition> getWfWorkflowDefinitionURI() {
		return wfwdIdAccessor.getURI();
	}

 	/**
	 * Association : current.
	 * @return l'accesseur vers la propriété 'current'
	 */
	public VAccessor<io.vertigo.workflow.domain.instance.WfActivity> current() {
		return wfaId2Accessor;
	}
	
	@Deprecated
	public io.vertigo.workflow.domain.instance.WfActivity getCurrent() {
		// we keep the lazyness
		if (!wfaId2Accessor.isLoaded()) {
			wfaId2Accessor.load();
		}
		return wfaId2Accessor.get();
	}

	/**
	 * Retourne l'URI: current.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.workflow.domain.instance.WfActivity> getCurrentURI() {
		return wfaId2Accessor.getURI();
	}

 	/**
	 * Association : WfStatus.
	 * @return l'accesseur vers la propriété 'WfStatus'
	 */
	public EnumVAccessor<io.vertigo.workflow.domain.instance.WfStatus, io.vertigo.workflow.domain.instance.WfStatusEnum> wfStatus() {
		return wfsCodeAccessor;
	}
	
	@Deprecated
	public io.vertigo.workflow.domain.instance.WfStatus getWfStatus() {
		// we keep the lazyness
		if (!wfsCodeAccessor.isLoaded()) {
			wfsCodeAccessor.load();
		}
		return wfsCodeAccessor.get();
	}

	/**
	 * Retourne l'URI: WfStatus.
	 * @return URI de l'association
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.URI<io.vertigo.workflow.domain.instance.WfStatus> getWfStatusURI() {
		return wfsCodeAccessor.getURI();
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
