/**
 * vertigo - simple java starter
 *
 * Copyright (C) 2013-2019, KleeGroup, direction.technique@kleegroup.com (http://www.kleegroup.com)
 * KleeGroup, Centre d'affaire la Boursidiere - BP 159 - 92357 Le Plessis Robinson Cedex - France
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.vertigo.rules.domain;

import io.vertigo.dynamo.domain.model.Entity;
import io.vertigo.dynamo.domain.model.URI;
import io.vertigo.dynamo.domain.model.ListVAccessor;
import io.vertigo.dynamo.domain.stereotype.Field;
import io.vertigo.dynamo.domain.util.DtObjectUtil;
import io.vertigo.lang.Generated;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class SelectorDefinition implements Entity {
	private static final long serialVersionUID = 1L;

	private Long id;
	private java.util.Date creationDate;
	private Long itemId;
	private String groupId;

	@io.vertigo.dynamo.domain.stereotype.Association(
			name = "A_SEL_FID",
			fkFieldName = "SEL_ID",
			primaryDtDefinitionName = "DT_SELECTOR_DEFINITION",
			primaryIsNavigable = false,
			primaryRole = "SelectorDefinition",
			primaryLabel = "SelectorDefinition",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DT_RULE_FILTER_DEFINITION",
			foreignIsNavigable = true,
			foreignRole = "RuleFilterDefinition",
			foreignLabel = "RuleFilterDefinition",
			foreignMultiplicity = "0..*")
	private final ListVAccessor<io.vertigo.rules.domain.RuleFilterDefinition> ruleFilterDefinitionAccessor = new ListVAccessor<>(this, "A_SEL_FID", "RuleFilterDefinition");

	/** {@inheritDoc} */
	@Override
	public URI<SelectorDefinition> getURI() {
		return DtObjectUtil.createURI(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'id'.
	 * @return Long id <b>Obligatoire</b>
	 */
	@Field(domain = "DO_RULES_ID", type = "ID", required = true, label = "id")
	public Long getId() {
		return id;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'id'.
	 * @param id Long <b>Obligatoire</b>
	 */
	public void setId(final Long id) {
		this.id = id;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'creationDate'.
	 * @return java.util.Date creationDate
	 */
	@Field(domain = "DO_RULES_DATE", label = "creationDate")
	public java.util.Date getCreationDate() {
		return creationDate;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'creationDate'.
	 * @param creationDate java.util.Date
	 */
	public void setCreationDate(final java.util.Date creationDate) {
		this.creationDate = creationDate;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'itemId'.
	 * @return Long itemId
	 */
	@Field(domain = "DO_RULES_WEAK_ID", label = "itemId")
	public Long getItemId() {
		return itemId;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'itemId'.
	 * @param itemId Long
	 */
	public void setItemId(final Long itemId) {
		this.itemId = itemId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'groupId'.
	 * @return String groupId
	 */
	@Field(domain = "DO_RULES_FIELD", label = "groupId")
	public String getGroupId() {
		return groupId;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'groupId'.
	 * @param groupId String
	 */
	public void setGroupId(final String groupId) {
		this.groupId = groupId;
	}

	/**
	 * Association : RuleFilterDefinition.
	 * @return l'accesseur vers la propriété 'RuleFilterDefinition'
	 */
	public ListVAccessor<io.vertigo.rules.domain.RuleFilterDefinition> ruleFilterDefinition() {
		return ruleFilterDefinitionAccessor;
	}
	
	/**
	 * Association : RuleFilterDefinition.
	 * @return io.vertigo.dynamo.domain.model.DtList<io.vertigo.rules.domain.RuleFilterDefinition>
	 */
	@Deprecated
	public io.vertigo.dynamo.domain.model.DtList<io.vertigo.rules.domain.RuleFilterDefinition> getRuleFilterDefinitionList() {
		// we keep the lazyness
		if (!ruleFilterDefinitionAccessor.isLoaded()) {
			ruleFilterDefinitionAccessor.load();
		}
		return ruleFilterDefinitionAccessor.get();
	}

	/**
	 * Association URI: RuleFilterDefinition.
	 * @return URI de l'association
	 */
	@Deprecated	
	public io.vertigo.dynamo.domain.metamodel.association.DtListURIForSimpleAssociation getRuleFilterDefinitionDtListURI() {
		return (io.vertigo.dynamo.domain.metamodel.association.DtListURIForSimpleAssociation) ruleFilterDefinitionAccessor.getDtListURI();
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
